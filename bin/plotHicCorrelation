#!/usr/bin/env python

import argparse
from kaic.analysis.hic_correlation_plots import plot_chromosome_correlation, plot_distance_correlation
import logging
logging.basicConfig(level=logging.DEBUG)

if __name__ == '__main__':
    parser = argparse.ArgumentParser();
    
    parser.add_argument(
        'hic1',
        help='''Hi-C file 1'''
    );
    
    parser.add_argument(
        'hic2',
        help='''Hi-C file 2'''
    );
    
    parser.add_argument(
        'genome',
        help='''Genome object file'''
    );
    
    parser.add_argument(
        'output',
        help='''Output filename'''
    )
    
    parser.add_argument(
        '-res', '--resolution', dest='resolution',
        type=int,
        help='''Resolution (binning distance) of Hi-C maps''',
        required=True
    )
    
    parser.add_argument(
        '-d', '--distance', dest='distance',
        action='store_true',
        help='''Show intra-chromosomal distance correlation'''
    )
    parser.set_defaults(distance=False)
    
    parser.add_argument(
        '-r', '--reverse', dest='reverse',
        action='store_true',
        help='''Reverse distance correlation direction (start from largest distance)'''
    )
    parser.set_defaults(reverse=False)
    
    parser.add_argument(
        '-w', '--window', dest='window',
        type=int,
        default=None,
        help='''Window size in base-pairs for distance correlation'''
    )
    
   
    args = parser.parse_args()
    
    if args.distance:
        plot_distance_correlation(args.hic1, args.hic2, args.genome, args.resolution, reverse=args.reverse, window=args.window, output=args.output)
    else:
        plot_chromosome_correlation(args.hic1, args.hic2, args.genome, args.resolution, output=args.output)