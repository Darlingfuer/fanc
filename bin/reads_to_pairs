#!/usr/bin/env python

import argparse
import os.path
from kaic.data.genomic import genome_from_string
from kaic.construct.seq import Reads, FragmentMappedReadPairs 

import logging
logging.basicConfig(level=logging.DEBUG)

'''
Created on May 20, 2015

@author: kkruse1
'''

if __name__ == '__main__':
    parser = argparse.ArgumentParser();
    
    parser.add_argument(
        'reads1',
        help='''First half of input reads'''
    )
    
    parser.add_argument(
        'reads2',
        help='''Second half of input reads'''
    )
    
    parser.add_argument(
        'genome',
        help='''Can be an HDF5 Genome object, a FASTA file, a folder with FASTA files, or a comma-separated list of FASTA files'''
    )
    
    parser.add_argument(
        'restriction_enzyme',
        help='''Restriction enzyme used in the experiment, e.g. HindIII'''
    )
    
    parser.add_argument(
        'output',
        help='''Output file for mapped pairs'''
    )
    
    args = parser.parse_args()
    
    reads1_path = os.path.expanduser(args.reads1)
    reads2_path = os.path.expanduser(args.reads2)
    genome_path = os.path.expanduser(args.genome)
    output_path = os.path.expanduser(args.output)
    
    logging.info("Loading left side of reads...")
    reads1 = Reads(reads1_path)
    logging.info("Loading right side of reads...")
    reads2 = Reads(reads2_path)
    logging.info("Building genome...")
    genome = genome_from_string(genome_path)
    logging.info("Getting fragments...")
    nodes = genome.get_regions(args.restriction_enzyme)
    
    logging.info("Building pairs...")
    pairs = FragmentMappedReadPairs(file_name=output_path)
    logging.info("Mapping reads...")
    pairs.load(reads1, reads2, nodes)
    
    logging.info("Done.")
    pairs.close()