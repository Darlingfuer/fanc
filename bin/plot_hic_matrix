#!/usr/bin/env python

import argparse
import os.path

import logging
import kaic.plotting.plot_genomic_data as pgd
from kaic.data.genomic import Hic
logging.basicConfig(level=logging.DEBUG)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    
    parser.add_argument(
        'input',
        help='''Input Hi-C file'''
    )

    parser.add_argument(
        'output',
        nargs="?",
        help='''Output PDF file'''
    )
    
    parser.add_argument(
        '-r', '--region', dest='region',
        help='''Region selector string (e.g. "chr1:20456-330123")'''
    )
    
    parser.add_argument(
        '-l', '--lower', dest='lower',
        type=float,
        default=25.0,
        help='''[0.0-100.0] Percentile, lower bound on Hi-C contact counts (for color scale, default: 25.0)'''
    )
    
    parser.add_argument(
        '-u', '--upper', dest='upper',
        type=float,
        default=98.0,
        help='''[0.0-100.0] Percentile, upper bound on Hi-C contact counts (for color scale, default: 98.0)'''
    )

    parser.add_argument(
        '-c', '--colormap', dest='colormap',
        default='viridis',
        help='''Matplotlib colormap (default: viridis)'''
    )
    
    args = parser.parse_args()
    
    input_path = os.path.expanduser(args.input)
    
    hic = Hic(input_path)
    
    output_path = None
    if args.output:
        output_path = os.path.expanduser(args.output)

    if args.region is None:
        args.region = slice(None, None, None)
    pgd.hic_matrix_plot(hic, output=output_path, key=args.region,
                        lower_percentile=args.lower, upper_percentile=args.upper,
                        colormap=args.colormap)
    
    hic.close()
